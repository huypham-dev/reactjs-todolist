{"version":3,"sources":["components/Item.js","components/Form.js","components/AddItem.js","components/Search.js","components/Sort.js","components/Control.js","components/ListItem.js","components/mockdata.js","App.js","serviceWorker.js","index.js"],"names":["Item","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isEdit","isEnable","input","name","priority","editClick","bind","assertThisInitialized","saveClick","handleChange","handleChangeSelect","setState","id","_this$state","editItem","enable","event","target","value","Number","_this2","react_default","a","createElement","className","stt","defaultValue","onChange","type","onClick","disabled","listItem","React","Component","Form","notify","display","handleChange1","handleSubmit","length","onGoAddItem","setTimeout","e","console","log","placeholder","onGoClickCancel","style","color","AddItem","isShowForm","showToogleForm","elmForm","components_Form","onClickAddItem","Search","strSearch","handleClear","str","Sort","sortBy","sortByDir","handleSort","orderBy","orderDir","typeSort","data-toggle","aria-haspopup","aria-expanded","role","fontSize","toUpperCase","Control","components_Search","stringSearch","components_Sort","ListItem","width","item","uniqid","require","listItems","App","mockdata","getStringSearch","getTypeSort","deleteItem","addItem","orderByDir","remove","forEach","lsItem","push","itemsOrigin","items","includes","funcSort","map","idx","components_Item","key","components_Control","components_AddItem","components_ListItem","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4e9f4010.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Item extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isEdit: false,\r\n            isEnable: true,\r\n            input: this.props.name,\r\n            priority: this.props.priority\r\n        };\r\n        this.editClick = this.editClick.bind(this);\r\n        this.saveClick = this.saveClick.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeSelect = this.handleChangeSelect.bind(this);\r\n    }\r\n    editClick() {\r\n        this.setState({\r\n            isEdit: !this.state.isEdit\r\n        });\r\n    }\r\n    saveClick() {\r\n        let { id } = this.props;\r\n        let { input, priority } = this.state;\r\n        this.props.editItem(id, input, priority);\r\n        this.setState({\r\n            isEdit: !this.state.isEdit,\r\n            enable: !this.state.isEdit,\r\n            isEnable:true\r\n        });\r\n    }\r\n    handleChange(event) {\r\n        this.setState({\r\n            input: event.target.value,\r\n            isEnable: false\r\n        });\r\n    }\r\n    handleChangeSelect(event) {\r\n        this.setState({\r\n            priority: Number(event.target.value),\r\n            isEnable: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let priority = <span className='label label-default'>Small</span>\r\n\r\n        if (this.props.priority === 1) {\r\n            priority = <span className='label label-warning'>Medium</span>\r\n        } else if (this.props.priority === 2) {\r\n            priority = <span className='label label-danger'>High</span>\r\n        }\r\n\r\n        if (this.state.isEdit) {\r\n            return (\r\n                <tr>\r\n                    {/* form edit */}\r\n                    <td className=\"text-center\">{this.props.stt}</td>\r\n                    <td><input defaultValue={this.props.name} onChange={this.handleChange} type=\"text\" className=\"form-control\" /></td>\r\n                    <td className=\"text-center\">\r\n                        <select defaultValue = {this.props.priority} className=\"form-control\" onChange={this.handleChangeSelect}>\r\n                            <option value = {0}>Small</option>\r\n                            <option value = {1}>Medium</option>\r\n                            <option value = {2}>High</option>\r\n                        </select>\r\n                    </td>\r\n                    <td>\r\n                        <button type=\"button\" className=\"btn btn-default btn-sm\" onClick={this.editClick}>Cancel</button>\r\n                        &nbsp;<button disabled = {this.state.isEnable} type=\"button\" className=\"btn btn-success btn-sm\" onClick={this.saveClick}>Save</button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n\r\n                <tr>\r\n                    <td className=\"text-center\">{this.props.stt}</td>\r\n                    <td>{this.props.name}</td>\r\n                    <td className=\"text-center\">{priority}</td>\r\n                    <td>\r\n                        <button type=\"button\" className=\"btn btn-warning btn-sm\" onClick={this.editClick}>Edit</button>&nbsp;\r\n                        <button onClick={() => this.props.listItem(this.props.id)} type=\"button\" className=\"btn btn-danger btn-sm\">Delete</button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Item;\r\n","import React from 'react';\r\n\r\nclass Form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            input: '',\r\n            priority: 0,\r\n            notify: ['', ''],\r\n            display: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChange1 = this.handleChange1.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleSubmit() {\r\n        if (this.state.input.length > 0) \r\n        {\r\n            this.props.onGoAddItem(this.state.input, this.state.priority);\r\n            this.setState({\r\n                input: '',\r\n                notify: ['Added success!', 'green'],\r\n                display: 'block'\r\n            });\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                notify: ['Please enter something!', 'red'],\r\n                display: 'block'\r\n            });\r\n        }\r\n        setTimeout( () => this.setState({display:'none'}), 2000);\r\n    }\r\n    handleChange(e) {\r\n        this.setState({\r\n            input: e.target.value\r\n        });\r\n    }\r\n    handleChange1(e) {\r\n        this.setState({\r\n            priority: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.display);\r\n\r\n        return (\r\n            <form className=\"form-inline\">\r\n                <div className=\"form-group\">\r\n                    <input value={this.state.input} type=\"text\" className=\"form-control\" placeholder=\"Item Name\" onChange={this.handleChange} />&nbsp;\r\n                    \r\n                </div>\r\n                <div className=\"form-group\">&nbsp;\r\n                    <select className=\"form-control\" onChange={this.handleChange1}>\r\n                        <option value={0}>Small</option>\r\n                        <option value={1}>Medium</option>\r\n                        <option value={2}>High</option> \r\n                    </select>\r\n                </div>&nbsp;\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleSubmit}>Submit</button>&nbsp;\r\n                <button type=\"button\" className=\"btn btn-default\" onClick = {this.props.onGoClickCancel}>Cancel</button>\r\n                <br /><span className = \"notify\" style = {{color:this.state.notify[1], display: this.state.display}}>{this.state.notify[0]}</span>\r\n            </form>\r\n        );\r\n    }\r\n}\r\nexport default Form;\r\n","import React from 'react';\r\nimport Form from './Form';\r\n\r\nclass AddItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowForm: false\r\n        };\r\n        this.showToogleForm = this.showToogleForm.bind(this);\r\n    }\r\n    showToogleForm(){\r\n        this.setState({\r\n            isShowForm: !this.state.isShowForm\r\n        });\r\n    }\r\n    render() {\r\n        let elmForm = null;\r\n        if (this.state.isShowForm) {\r\n            elmForm = <Form onGoClickCancel = {this.showToogleForm} onGoAddItem = {this.props.onClickAddItem} />;\r\n        }\r\n        return (\r\n            <div className=\"row marginB10\">\r\n                <div className=\"col-md-offset-7 col-md-5\">\r\n                        <button type=\"button\" className=\"btn btn-info btn-block marginB10\" onClick={this.showToogleForm}>Add Item</button>\r\n                    {elmForm}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default AddItem;","import React from 'react';\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            strSearch: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClear = this.handleClear.bind(this);\r\n    }\r\n    handleChange(event){\r\n        this.props.str(event.target.value);\r\n    }\r\n    handleClear(){\r\n        this.props.str('');\r\n        this.setState({\r\n            strSearch: ''\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\r\n                <div className=\"input-group\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Search item name\" onChange = {this.handleChange} />\r\n                    <span className=\"input-group-btn\">\r\n                        <button className=\"btn btn-warning\" type=\"button\" onClick = {this.handleClear}>Clear</button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Search;\r\n","import React from 'react';\r\n\r\nclass Sort extends React.Component {\r\n    constructor(props) {\r\n         super(props);\r\n        this.state = {\r\n            sortBy: \"name\",\r\n            sortByDir: \"asc\"\r\n        };\r\n        this.handleSort = this.handleSort.bind(this);\r\n    }\r\n    handleSort(orderBy, orderDir){\r\n        this.setState({\r\n            sortBy: orderBy,\r\n            sortByDir: orderDir\r\n          });\r\n        this.props.typeSort(orderBy, orderDir);\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3\">\r\n                <div className=\"dropdown\">\r\n                    <button className=\"btn btn-default dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                        Sort by <span className=\"caret\" />\r\n                    </button>&nbsp;\r\n                    <ul className=\"dropdown-menu\" onChange = {this.handleChange}>\r\n                        <li><a onClick = {()=>this.handleSort('name','asc')} role=\"button\">Name ASC</a></li>\r\n                        <li><a onClick = {()=>this.handleSort('name','desc')} role=\"button\">Name DESC</a></li>\r\n                        <li role=\"separator\" className=\"divider\" />\r\n                        <li><a onClick = {()=>this.handleSort('priority','asc')} role=\"button\">Level ASC</a></li>\r\n                        <li><a onClick = {()=>this.handleSort('priority','desc')} role=\"button\">Level DESC</a></li>\r\n                    </ul>\r\n                    <span style = {{fontSize: '11px'}}  className=\"label label-success label-medium\">{this.state.sortBy.toUpperCase() + '-' + this.state.sortByDir.toUpperCase()}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Sort;\r\n","import React from 'react';\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\n\r\nclass Control extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                    <Search str = {this.props.stringSearch} />\r\n                    <Sort typeSort={this.props.typeSort}/>\r\n                </div>\r\n        );\r\n    }\r\n}\r\nexport default Control;\r\n","import React from 'react';\r\n\r\nclass ListItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"panel panel-success\">\r\n                <div className=\"panel-heading\">List Item</div>\r\n                <table className=\"table table-hover \">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ width: '10%' }} className=\"text-center\">#</th>\r\n                            <th>Name</th>\r\n                            <th style={{ width: '15%' }} className=\"text-center\">Level</th>\r\n                            <th style={{ width: '15%' }}>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.props.item}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ListItem;\r\n","var uniqid = require('uniqid');\r\n\r\nvar listItems=\r\n        [\r\n          { id: uniqid(), name: \"Task 12\", priority: 0 },\r\n          { id: uniqid(), name: \"Task 2\", priority: 1 },\r\n          { id: uniqid(), name: \"Task 3\", priority: 2 },\r\n          { id: uniqid(), name: \"Task 4\", priority: 1 },\r\n          { id: uniqid(), name: \"Task 5\", priority: 0 }\r\n        ]\r\nexport default listItems;","import React from 'react';\nimport './App.css';\nimport Item from './components/Item';\nimport AddItem from './components/AddItem'\nimport Control from './components/Control';\nimport ListItem from './components/ListItem';\nimport {orderBy as funcSort, remove} from 'lodash';\nimport mockdata from './components/mockdata';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listItems: mockdata,\n      strSearch: '',\n      sortBy: 'name',\n      sortByDir: 'asc',\n    };\n    this.getStringSearch = this.getStringSearch.bind(this);\n    this.getTypeSort = this.getTypeSort.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.editItem = this.editItem.bind(this);\n  }\n  getStringSearch(str) {\n    this.setState({\n      strSearch: str\n    });\n  }\n  //Sort\n  getTypeSort(orderBy, orderByDir) {\n    this.setState({\n      sortBy: orderBy,\n      sortByDir: orderByDir\n    });\n  }\n  //Delete \n  deleteItem(id) {\n    remove(this.state.listItems, function(item) {\n      return item.id === id;\n    });\n    this.setState({\n      listItems: this.state.listItems\n    });\n  }\n  //Update \n  editItem(id, name, priority) {\n    let lsItem = this.state.listItems;\n    lsItem.forEach(function(item){\n      if (item.id === id) {\n        item.name = name;\n        item.priority = priority;\n      }\n    });\n    console.log(name,priority);\n    this.setState({\n      listItems: this.state.listItems\n    });\n  }\n  addItem(name, priority) {\n    var uniqid = require('uniqid');\n    //let idMax = Number.MIN_VALUE;\n    let lsItem = this.state.listItems;\n    // lsItem.forEach(function(item){\n    //   idMax = Math.max(idMax, item.id)\n    // });\n    lsItem.push(\n      {\n        id: uniqid(),\n        name: name,\n        priority: Number(priority)\n      }\n    );\n    this.setState({\n      listItems: lsItem\n    });\n  }\n\n  render() {       \n    let itemsOrigin = this.state.listItems;\n    let items = [];\n    let { sortBy, sortByDir } = this.state;  \n\n    //loop list item => push Items\n    if (this.state.strSearch.length > 0) {\n      itemsOrigin.forEach((item) => {\n        if (item.name.includes(this.state.strSearch)) {\n          items.push(item);\n        }\n      });\n    }\n    else {\n      items = itemsOrigin;\n    }\n    //sort\n    items = funcSort(items, [sortBy], [sortByDir]);\n\n    //mapping item to View\n    let item = items.map((item, idx) => <Item stt={idx + 1} key={idx + 1}\n                                        id={item.id}\n                                        name={item.name}\n                                        priority={item.priority} listItem = {this.deleteItem} editItem = {this.editItem} />)\n\n    return (\n      <div className=\"container\">\n        <div className=\"page-header\">\n          <h1>ToDo List <small>ReactJS</small></h1>\n        </div>\n        <Control stringSearch={this.getStringSearch} typeSort={this.getTypeSort} />\n        <AddItem onClickAddItem = {this.addItem}/>\n        <ListItem item={item} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}