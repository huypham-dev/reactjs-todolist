{"version":3,"sources":["components/Title.js","components/Item.js","components/Form.js","components/AddItem.js","components/Search.js","components/Sort.js","components/Control.js","components/ListItem.js","components/mockdata.js","App.js","serviceWorker.js","index.js"],"names":["Title","react_default","a","createElement","className","React","Component","Item","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isEdit","isDisable","input","name","priority","editClick","bind","assertThisInitialized","saveClick","handleChange","setState","id","_this$state","editItem","event","_this$setState","defineProperty","target","value","_this2","stt","defaultValue","onChange","type","onClick","disabled","listItem","Form","notify","display","handleSubmit","length","onGoAddItem","setTimeout","e","placeholder","onGoClickCancel","style","color","AddItem","isShowForm","showToogleForm","elmForm","titleForm","components_Form","onClickAddItem","Search","strSearch","handleClear","str","Sort","sortBy","sortByDir","handleSort","orderBy","orderDir","typeSort","data-toggle","aria-haspopup","aria-expanded","href","preventDefault","role","fontSize","toUpperCase","Control","components_Search","stringSearch","components_Sort","ListItem","width","item","uniqid","require","listItems","App","localStorage","getItem","setItem","JSON","stringify","mockdata","parse","getStringSearch","getTypeSort","deleteItem","addItem","orderByDir","remove","forEach","Number","lsItem","push","itemsOrigin","items","includes","funcSort","map","idx","components_Item","key","components_Title","components_Control","components_AddItem","components_ListItem","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.da9d35b5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Title extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"page-header\">\r\n          <h1>Todo List <small>ReactJS</small></h1>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default Title;\r\n","import React from 'react';\r\n\r\nclass Item extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isEdit: false,\r\n            isDisable: true,\r\n            input: this.props.name,\r\n            priority: this.props.priority\r\n        };\r\n\r\n        this.editClick = this.editClick.bind(this);\r\n        this.saveClick = this.saveClick.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    editClick() {\r\n        this.setState({\r\n            isEdit: !this.state.isEdit\r\n        });\r\n    }\r\n    saveClick() {\r\n        let { id } = this.props;\r\n        let { input, priority } = this.state;\r\n        this.props.editItem(id, input, priority);\r\n        this.setState({\r\n            isEdit: !this.state.isEdit,\r\n            isDisable:true\r\n        });\r\n    }\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n            isDisable: false\r\n        });\r\n    }\r\n\r\n    render() {         \r\n        let priority = <span className='label label-success'>Small</span>\r\n\r\n        if (this.props.priority === 1) {\r\n            priority = <span className='label label-info'>Medium</span>\r\n        } else if (this.props.priority === 2) {\r\n            priority = <span className='label label-danger'>High</span>\r\n        }\r\n\r\n        if (this.state.isEdit) {\r\n            return (\r\n                <tr>\r\n                    {/* form edit */}\r\n                    <td className=\"text-center\">{this.props.stt}</td>\r\n                    <td><input defaultValue={this.props.name} name = \"input\" onChange={this.handleChange} type=\"text\" className=\"form-control\" /></td>\r\n                    <td className=\"text-center\">\r\n                        <select name = \"priority\" defaultValue = {this.props.priority} className=\"form-control\" onChange={this.handleChange}>\r\n                            <option value = {0}>Small</option>\r\n                            <option value = {1}>Medium</option>\r\n                            <option value = {2}>High</option>\r\n                        </select>\r\n                    </td>\r\n                    <td>\r\n                        <button type=\"button\" className=\"btn btn-default btn-sm\" onClick={this.editClick}>Cancel</button>\r\n                        &nbsp;<button disabled = {this.state.isDisable} type=\"button\" className=\"btn btn-success btn-sm\" onClick={this.saveClick}>Save</button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n\r\n                <tr>\r\n                    <td className=\"text-center\">{this.props.stt}</td>\r\n                    <td>{this.props.name}</td>\r\n                    <td className=\"text-center\">{priority}</td>\r\n                    <td>\r\n                        <button type=\"button\" className=\"btn btn-warning btn-sm\" onClick={this.editClick}>Edit</button>&nbsp;\r\n                        <button onClick={() => this.props.listItem(this.props.id)} type=\"button\" className=\"btn btn-danger btn-sm\">Delete</button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Item;\r\n","import React from 'react';\r\n\r\nclass Form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            input: '',\r\n            priority: 0,\r\n            notify: ['', ''],\r\n            display: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleSubmit() {\r\n        if (this.state.input.length > 0) \r\n        {\r\n            this.props.onGoAddItem(this.state.input, this.state.priority);\r\n            this.setState({\r\n                input: '',\r\n                notify: ['Added success!', 'green'],\r\n                display: 'block'\r\n            });\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                notify: ['Please enter something!', 'red'],\r\n                display: 'block'\r\n            });\r\n        }\r\n        setTimeout( () => this.setState({display:'none'}), 2000);\r\n    }\r\n    handleChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"form-inline\">\r\n                <div className=\"form-group\">\r\n                    <input value={this.state.input} name = \"input\" type=\"text\" className=\"form-control\" placeholder=\"Item Name\" onChange={this.handleChange} />&nbsp;                \r\n                </div>\r\n                <div className=\"form-group\">&nbsp;\r\n                    <select className=\"form-control\" name = \"priority\" onChange={this.handleChange}>\r\n                        <option value={0}>Small</option>\r\n                        <option value={1}>Medium</option>\r\n                        <option value={2}>High</option> \r\n                    </select>\r\n                </div>&nbsp;\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleSubmit}>Submit</button>&nbsp;\r\n                <button type=\"button\" className=\"btn btn-default\" onClick = {this.props.onGoClickCancel}>Cancel</button>\r\n                <br /><span className = \"notify\" style = {{color:this.state.notify[1], display: this.state.display}}>{this.state.notify[0]}</span>\r\n            </form>\r\n        );\r\n    }\r\n}\r\nexport default Form;\r\n","import React from 'react';\r\nimport Form from './Form';\r\n\r\nclass AddItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowForm: false\r\n        };\r\n        this.showToogleForm = this.showToogleForm.bind(this);\r\n    }\r\n    showToogleForm(){\r\n        this.setState({\r\n            isShowForm: !this.state.isShowForm\r\n        });\r\n    }\r\n    render() {\r\n        let elmForm = null;\r\n        let titleForm = <button type=\"button\" className=\"btn btn-info btn-block marginB10\" onClick={this.showToogleForm}>Add Task</button>\r\n        if (this.state.isShowForm) {\r\n            titleForm = <button type=\"button\" className=\"btn btn-danger btn-block marginB10\" onClick={this.showToogleForm}>Close Form</button>\r\n            elmForm = <Form onGoClickCancel = {this.showToogleForm} onGoAddItem = {this.props.onClickAddItem} />;\r\n        }\r\n        return (\r\n            <div className=\"row marginB10\">\r\n                <div className=\"col-md-offset-7 col-md-5\">\r\n                    {titleForm}\r\n                    {elmForm}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default AddItem;","import React from 'react';\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            strSearch: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClear = this.handleClear.bind(this);\r\n    }\r\n    handleChange(event){\r\n        this.props.str(event.target.value);\r\n        this.setState({\r\n            strSearch: event.target.value\r\n        });\r\n    }\r\n    handleClear(){\r\n        this.props.str('');\r\n        this.setState({\r\n            strSearch: ''\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\r\n                <div className=\"input-group\">\r\n                    <input value = {this.state.strSearch} type=\"text\" className=\"form-control\" placeholder=\"Search item name\" onChange = {this.handleChange} />\r\n                    <span className=\"input-group-btn\">\r\n                        <button className=\"btn btn-warning\" type=\"button\" onClick = {this.handleClear}>Clear</button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Search;\r\n","import React from 'react';\r\n\r\nclass Sort extends React.Component {\r\n    constructor(props) {\r\n         super(props);\r\n        this.state = {\r\n            sortBy: \"name\",\r\n            sortByDir: \"asc\"\r\n        };\r\n        this.handleSort = this.handleSort.bind(this);\r\n    }\r\n    handleSort(orderBy, orderDir){\r\n        this.setState({\r\n            sortBy: orderBy,\r\n            sortByDir: orderDir\r\n          });\r\n        this.props.typeSort(orderBy, orderDir);\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3\">\r\n                <div className=\"dropdown\">\r\n                    <button className=\"btn btn-default dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                        Sort by <span className=\"caret\" />\r\n                    </button>&nbsp;\r\n                    <ul className=\"dropdown-menu\">\r\n                        <li><a href='link' onClick = {(e)=>{this.handleSort('name','asc'); e.preventDefault();}} role=\"button\">Name ASC</a></li>\r\n                        <li><a href='link' onClick = {(e)=>{this.handleSort('name','desc'); e.preventDefault();}} role=\"button\">Name DESC</a></li>\r\n                        <li role=\"separator\" className=\"divider\" />\r\n                        <li><a href='link' onClick = {(e)=>{this.handleSort('priority','asc'); e.preventDefault();}} role=\"button\">Level ASC</a></li>\r\n                        <li><a href='link' onClick = {(e)=>{this.handleSort('priority','desc'); e.preventDefault();}} role=\"button\">Level DESC</a></li>\r\n                    </ul>\r\n                    <span style = {{fontSize: '11px'}}  className=\"label label-success label-medium\">{this.state.sortBy.toUpperCase() + '-' + this.state.sortByDir.toUpperCase()}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Sort;\r\n","import React from 'react';\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\n\r\nclass Control extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                    <Search str = {this.props.stringSearch} />\r\n                    <Sort typeSort={this.props.typeSort}/>\r\n                </div>\r\n        );\r\n    }\r\n}\r\nexport default Control;\r\n","import React from 'react';\r\n\r\nclass ListItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"panel panel-success\">\r\n                <div className=\"panel-heading\">Todo List</div>\r\n                <table className=\"table table-hover \">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ width: '10%' }} className=\"text-center\">#</th>\r\n                            <th>Name</th>\r\n                            <th style={{ width: '15%' }} className=\"text-center\">Priority</th>\r\n                            <th style={{ width: '15%' }}>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.props.item}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ListItem;\r\n","var uniqid = require('uniqid');\r\n\r\nvar listItems = [\r\n  { id: uniqid(), name: \"Task 1\", priority: 0 },\r\n  { id: uniqid(), name: \"Task 2\", priority: 1 },\r\n  { id: uniqid(), name: \"Task 3\", priority: 2 },\r\n  { id: uniqid(), name: \"Task 4\", priority: 1 },\r\n  { id: uniqid(), name: \"Task 5\", priority: 0 }\r\n];\r\n\r\n// if (localStorage.getItem(\"InitListItem\") === null) {\r\n//   localStorage.setItem('InitListItem', JSON.stringify(listItems));\r\n// }\r\n//var initDefault = JSON.parse(localStorage.getItem('InitListItem'));\r\nexport default listItems;","import React from 'react';\nimport './App.css';\nimport Title from './components/Title';\nimport Item from './components/Item';\nimport AddItem from './components/AddItem'\nimport Control from './components/Control';\nimport ListItem from './components/ListItem';\nimport { orderBy as funcSort, remove } from 'lodash';\nimport mockdata from './components/mockdata';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    if (localStorage.getItem(\"InitListItem\") === null) {\n      localStorage.setItem('InitListItem', JSON.stringify(mockdata));\n    }\n    this.state = {\n      listItems: JSON.parse(localStorage.getItem(\"InitListItem\")),\n      strSearch: '',\n      sortBy: 'name',\n      sortByDir: 'asc',\n    };\n    this.getStringSearch = this.getStringSearch.bind(this);\n    this.getTypeSort = this.getTypeSort.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.editItem = this.editItem.bind(this);\n  }\n  getStringSearch(str) {\n    this.setState({\n      strSearch: str\n    });\n  }\n  //Sort\n  getTypeSort(orderBy, orderByDir) {\n    this.setState({\n      sortBy: orderBy,\n      sortByDir: orderByDir\n    });\n  }\n  //Delete \n  deleteItem(id) {\n    remove(this.state.listItems, function (item) {\n      return item.id === id;\n    });\n    this.setState({\n      listItems: this.state.listItems\n    });\n    localStorage.setItem('InitListItem', JSON.stringify(this.state.listItems));\n  }\n  //Update \n  editItem(id, name, priority) {\n    let lsItem = this.state.listItems;\n    lsItem.forEach(function (item) {\n      if (item.id === id) {\n        item.name = name;\n        item.priority = Number(priority);\n      }\n    });\n    this.setState({\n      listItems: this.state.listItems\n    });\n    localStorage.setItem('InitListItem', JSON.stringify(this.state.listItems));\n  }\n  //add item\n  addItem(name, priority) {\n    var uniqid = require('uniqid');\n    let lsItem = this.state.listItems;\n    lsItem.push(\n      {\n        id: uniqid(),\n        name: name,\n        priority: Number(priority)\n      }\n    );\n    this.setState({\n      listItems: lsItem\n    });\n    localStorage.setItem('InitListItem', JSON.stringify(this.state.listItems));\n  }\n\n  render() {  \n    var storedItems = JSON.parse(localStorage.getItem(\"InitListItem\"));\n    let itemsOrigin = storedItems;\n    let items = [];\n    let { sortBy, sortByDir } = this.state;\n\n    //search\n    if (this.state.strSearch.length > 0) {\n      itemsOrigin.forEach((item) => {\n        if (item.name.includes(this.state.strSearch)) {\n          items.push(item);\n        }\n      });\n    }\n    else {\n      items = itemsOrigin;\n    }\n    //sort\n    items = funcSort(items, [sortBy], [sortByDir]);\n\n    //mapping item to View\n    let item = items.map((item, idx) => <Item stt={idx + 1} key={idx + 1} id={item.id} name={item.name}\n      priority={item.priority} listItem={this.deleteItem} editItem={this.editItem} />)\n\n    return (\n      <div className=\"container\">\n        <Title />\n        <Control stringSearch={this.getStringSearch} typeSort={this.getTypeSort} />\n        <AddItem onClickAddItem={this.addItem} />\n        <ListItem item={item} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}