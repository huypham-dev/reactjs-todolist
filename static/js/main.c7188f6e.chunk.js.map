{"version":3,"sources":["components/Title.js","components/Item.js","components/Form.js","components/AddItem.js","components/Search.js","components/Sort.js","components/Control.js","components/ListItem.js","components/mockdata.js","App.js","serviceWorker.js","index.js"],"names":["Title","react_default","a","createElement","className","React","Component","Item","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isEdit","isEnable","input","name","priority","editClick","bind","assertThisInitialized","saveClick","handleChange","handleChangeSelect","setState","id","_this$state","editItem","enable","event","target","value","Number","_this2","stt","defaultValue","onChange","type","onClick","disabled","listItem","Form","notify","display","handleChange1","handleSubmit","length","onGoAddItem","setTimeout","e","console","log","placeholder","onGoClickCancel","style","color","AddItem","isShowForm","showToogleForm","elmForm","components_Form","onClickAddItem","Search","strSearch","handleClear","str","Sort","sortBy","sortByDir","handleSort","orderBy","orderDir","typeSort","data-toggle","aria-haspopup","aria-expanded","href","preventDefault","role","fontSize","toUpperCase","Control","components_Search","stringSearch","components_Sort","ListItem","width","item","uniqid","require","listItems","App","localStorage","getItem","setItem","JSON","stringify","mockdata","parse","getStringSearch","getTypeSort","deleteItem","addItem","orderByDir","remove","forEach","lsItem","push","storedItems","itemsOrigin","items","includes","funcSort","map","idx","components_Item","key","components_Title","components_Control","components_AddItem","components_ListItem","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c7188f6e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Title extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"page-header\">\r\n          <h1>Todo list <small>ReactJS</small></h1>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default Title;\r\n","import React from 'react';\r\n\r\nclass Item extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isEdit: false,\r\n            isEnable: true,\r\n            input: this.props.name,\r\n            priority: this.props.priority\r\n        };\r\n        this.editClick = this.editClick.bind(this);\r\n        this.saveClick = this.saveClick.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeSelect = this.handleChangeSelect.bind(this);\r\n    }\r\n    editClick() {\r\n        this.setState({\r\n            isEdit: !this.state.isEdit\r\n        });\r\n    }\r\n    saveClick() {\r\n        let { id } = this.props;\r\n        let { input, priority } = this.state;\r\n        this.props.editItem(id, input, priority);\r\n        this.setState({\r\n            isEdit: !this.state.isEdit,\r\n            enable: !this.state.isEdit,\r\n            isEnable:true\r\n        });\r\n    }\r\n    handleChange(event) {\r\n        this.setState({\r\n            input: event.target.value,\r\n            isEnable: false\r\n        });\r\n    }\r\n    handleChangeSelect(event) {\r\n        this.setState({\r\n            priority: Number(event.target.value),\r\n            isEnable: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let priority = <span className='label label-default'>Small</span>\r\n\r\n        if (this.props.priority === 1) {\r\n            priority = <span className='label label-warning'>Medium</span>\r\n        } else if (this.props.priority === 2) {\r\n            priority = <span className='label label-danger'>High</span>\r\n        }\r\n\r\n        if (this.state.isEdit) {\r\n            return (\r\n                <tr>\r\n                    {/* form edit */}\r\n                    <td className=\"text-center\">{this.props.stt}</td>\r\n                    <td><input defaultValue={this.props.name} onChange={this.handleChange} type=\"text\" className=\"form-control\" /></td>\r\n                    <td className=\"text-center\">\r\n                        <select defaultValue = {this.props.priority} className=\"form-control\" onChange={this.handleChangeSelect}>\r\n                            <option value = {0}>Small</option>\r\n                            <option value = {1}>Medium</option>\r\n                            <option value = {2}>High</option>\r\n                        </select>\r\n                    </td>\r\n                    <td>\r\n                        <button type=\"button\" className=\"btn btn-default btn-sm\" onClick={this.editClick}>Cancel</button>\r\n                        &nbsp;<button disabled = {this.state.isEnable} type=\"button\" className=\"btn btn-success btn-sm\" onClick={this.saveClick}>Save</button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n\r\n                <tr>\r\n                    <td className=\"text-center\">{this.props.stt}</td>\r\n                    <td>{this.props.name}</td>\r\n                    <td className=\"text-center\">{priority}</td>\r\n                    <td>\r\n                        <button type=\"button\" className=\"btn btn-warning btn-sm\" onClick={this.editClick}>Edit</button>&nbsp;\r\n                        <button onClick={() => this.props.listItem(this.props.id)} type=\"button\" className=\"btn btn-danger btn-sm\">Delete</button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Item;\r\n","import React from 'react';\r\n\r\nclass Form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            input: '',\r\n            priority: 0,\r\n            notify: ['', ''],\r\n            display: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChange1 = this.handleChange1.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleSubmit() {\r\n        if (this.state.input.length > 0) \r\n        {\r\n            this.props.onGoAddItem(this.state.input, this.state.priority);\r\n            this.setState({\r\n                input: '',\r\n                notify: ['Added success!', 'green'],\r\n                display: 'block'\r\n            });\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                notify: ['Please enter something!', 'red'],\r\n                display: 'block'\r\n            });\r\n        }\r\n        setTimeout( () => this.setState({display:'none'}), 2000);\r\n    }\r\n    handleChange(e) {\r\n        this.setState({\r\n            input: e.target.value\r\n        });\r\n    }\r\n    handleChange1(e) {\r\n        this.setState({\r\n            priority: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.display);\r\n\r\n        return (\r\n            <form className=\"form-inline\">\r\n                <div className=\"form-group\">\r\n                    <input value={this.state.input} type=\"text\" className=\"form-control\" placeholder=\"Item Name\" onChange={this.handleChange} />&nbsp;\r\n                    \r\n                </div>\r\n                <div className=\"form-group\">&nbsp;\r\n                    <select className=\"form-control\" onChange={this.handleChange1}>\r\n                        <option value={0}>Small</option>\r\n                        <option value={1}>Medium</option>\r\n                        <option value={2}>High</option> \r\n                    </select>\r\n                </div>&nbsp;\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleSubmit}>Submit</button>&nbsp;\r\n                <button type=\"button\" className=\"btn btn-default\" onClick = {this.props.onGoClickCancel}>Cancel</button>\r\n                <br /><span className = \"notify\" style = {{color:this.state.notify[1], display: this.state.display}}>{this.state.notify[0]}</span>\r\n            </form>\r\n        );\r\n    }\r\n}\r\nexport default Form;\r\n","import React from 'react';\r\nimport Form from './Form';\r\n\r\nclass AddItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowForm: false\r\n        };\r\n        this.showToogleForm = this.showToogleForm.bind(this);\r\n    }\r\n    showToogleForm(){\r\n        this.setState({\r\n            isShowForm: !this.state.isShowForm\r\n        });\r\n    }\r\n    render() {\r\n        let elmForm = null;\r\n        if (this.state.isShowForm) {\r\n            elmForm = <Form onGoClickCancel = {this.showToogleForm} onGoAddItem = {this.props.onClickAddItem} />;\r\n        }\r\n        return (\r\n            <div className=\"row marginB10\">\r\n                <div className=\"col-md-offset-7 col-md-5\">\r\n                        <button type=\"button\" className=\"btn btn-info btn-block marginB10\" onClick={this.showToogleForm}>Add Item</button>\r\n                    {elmForm}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default AddItem;","import React from 'react';\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            strSearch: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClear = this.handleClear.bind(this);\r\n    }\r\n    handleChange(event){\r\n        this.props.str(event.target.value);\r\n    }\r\n    handleClear(){\r\n        this.props.str('');\r\n        this.setState({\r\n            strSearch: ''\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\r\n                <div className=\"input-group\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Search item name\" onChange = {this.handleChange} />\r\n                    <span className=\"input-group-btn\">\r\n                        <button className=\"btn btn-warning\" type=\"button\" onClick = {this.handleClear}>Clear</button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Search;\r\n","import React from 'react';\r\n\r\nclass Sort extends React.Component {\r\n    constructor(props) {\r\n         super(props);\r\n        this.state = {\r\n            sortBy: \"name\",\r\n            sortByDir: \"asc\"\r\n        };\r\n        this.handleSort = this.handleSort.bind(this);\r\n    }\r\n    handleSort(orderBy, orderDir){\r\n        this.setState({\r\n            sortBy: orderBy,\r\n            sortByDir: orderDir\r\n          });\r\n        this.props.typeSort(orderBy, orderDir);\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3\">\r\n                <div className=\"dropdown\">\r\n                    <button className=\"btn btn-default dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                        Sort by <span className=\"caret\" />\r\n                    </button>&nbsp;\r\n                    <ul className=\"dropdown-menu\">\r\n                        <li><a href='link' onClick = {(e)=>{this.handleSort('name','asc'); e.preventDefault();}} role=\"button\">Name ASC</a></li>\r\n                        <li><a href='link' onClick = {(e)=>{this.handleSort('name','desc'); e.preventDefault();}} role=\"button\">Name DESC</a></li>\r\n                        <li role=\"separator\" className=\"divider\" />\r\n                        <li><a href='link' onClick = {(e)=>{this.handleSort('priority','asc'); e.preventDefault();}} role=\"button\">Level ASC</a></li>\r\n                        <li><a href='link' onClick = {(e)=>{this.handleSort('priority','desc'); e.preventDefault();}} role=\"button\">Level DESC</a></li>\r\n                    </ul>\r\n                    <span style = {{fontSize: '11px'}}  className=\"label label-success label-medium\">{this.state.sortBy.toUpperCase() + '-' + this.state.sortByDir.toUpperCase()}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Sort;\r\n","import React from 'react';\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\n\r\nclass Control extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                    <Search str = {this.props.stringSearch} />\r\n                    <Sort typeSort={this.props.typeSort}/>\r\n                </div>\r\n        );\r\n    }\r\n}\r\nexport default Control;\r\n","import React from 'react';\r\n\r\nclass ListItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"panel panel-success\">\r\n                <div className=\"panel-heading\">List Item</div>\r\n                <table className=\"table table-hover \">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ width: '10%' }} className=\"text-center\">#</th>\r\n                            <th>Name</th>\r\n                            <th style={{ width: '15%' }} className=\"text-center\">Level</th>\r\n                            <th style={{ width: '15%' }}>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.props.item}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ListItem;\r\n","var uniqid = require('uniqid');\r\n\r\nvar listItems = [\r\n  { id: uniqid(), name: \"Task 1\", priority: 0 },\r\n  { id: uniqid(), name: \"Task 2\", priority: 1 },\r\n  { id: uniqid(), name: \"Task 3\", priority: 2 },\r\n  { id: uniqid(), name: \"Task 4\", priority: 1 },\r\n  { id: uniqid(), name: \"Task 5\", priority: 0 }\r\n];\r\n\r\n// if (localStorage.getItem(\"InitListItem\") === null) {\r\n//   localStorage.setItem('InitListItem', JSON.stringify(listItems));\r\n// }\r\n//var initDefault = JSON.parse(localStorage.getItem('InitListItem'));\r\nexport default listItems;","import React from 'react';\nimport './App.css';\nimport Title from './components/Title';\nimport Item from './components/Item';\nimport AddItem from './components/AddItem'\nimport Control from './components/Control';\nimport ListItem from './components/ListItem';\nimport { orderBy as funcSort, remove } from 'lodash';\nimport mockdata from './components/mockdata';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    if (localStorage.getItem(\"InitListItem\") === null) {\n      localStorage.setItem('InitListItem', JSON.stringify(mockdata));\n    }\n    this.state = {\n      listItems: JSON.parse(localStorage.getItem(\"InitListItem\")),\n      strSearch: '',\n      sortBy: 'name',\n      sortByDir: 'asc',\n    };\n    this.getStringSearch = this.getStringSearch.bind(this);\n    this.getTypeSort = this.getTypeSort.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.editItem = this.editItem.bind(this);\n  }\n  getStringSearch(str) {\n    this.setState({\n      strSearch: str\n    });\n  }\n  //Sort\n  getTypeSort(orderBy, orderByDir) {\n    this.setState({\n      sortBy: orderBy,\n      sortByDir: orderByDir\n    });\n  }\n  //Delete \n  deleteItem(id) {\n    remove(this.state.listItems, function (item) {\n      return item.id === id;\n    });\n    this.setState({\n      listItems: this.state.listItems\n    });\n    localStorage.setItem('InitListItem', JSON.stringify(this.state.listItems));\n  }\n  //Update \n  editItem(id, name, priority) {\n    let lsItem = this.state.listItems;\n    lsItem.forEach(function (item) {\n      if (item.id === id) {\n        item.name = name;\n        item.priority = priority;\n      }\n    });\n    this.setState({\n      listItems: this.state.listItems\n    });\n    localStorage.setItem('InitListItem', JSON.stringify(this.state.listItems));\n  }\n  //add item\n  addItem(name, priority) {\n    var uniqid = require('uniqid');\n    let lsItem = this.state.listItems;\n    lsItem.push(\n      {\n        id: uniqid(),\n        name: name,\n        priority: Number(priority)\n      }\n    );\n    this.setState({\n      listItems: lsItem\n    });\n    localStorage.setItem('InitListItem', JSON.stringify(this.state.listItems));\n  }\n\n  render() {\n    var storedItems = JSON.parse(localStorage.getItem(\"InitListItem\"));\n    console.log(storedItems);\n\n    let itemsOrigin = storedItems;\n    let items = [];\n    let { sortBy, sortByDir } = this.state;\n\n    //search\n    if (this.state.strSearch.length > 0) {\n      itemsOrigin.forEach((item) => {\n        if (item.name.includes(this.state.strSearch)) {\n          items.push(item);\n        }\n      });\n    }\n    else {\n      items = itemsOrigin;\n    }\n    //sort\n    items = funcSort(items, [sortBy], [sortByDir]);\n\n    //mapping item to View\n    let item = items.map((item, idx) => <Item stt={idx + 1} key={idx + 1} id={item.id} name={item.name}\n      priority={item.priority} listItem={this.deleteItem} editItem={this.editItem} />)\n\n    return (\n      <div className=\"container\">\n        <Title />\n        <Control stringSearch={this.getStringSearch} typeSort={this.getTypeSort} />\n        <AddItem onClickAddItem={this.addItem} />\n        <ListItem item={item} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}